# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.shortcuts import render

# Create your views here.

from django.http import HttpResponse, HttpResponseRedirect
from .forms import UploadFileForm

import pdb

import sys
sys.path.append("../..")
import gradcam

def index(request):
    if request.method == 'POST':
        #form = UploadFileForm(request.POST, request.FILES)
        imageFile = request.FILES['file']

        #create Imagw object
        if (Image.objects == NULL):
            image = Image(name=imageFile)
            image.save()
        else:
            image = Image.objects.get(name=imageFile)
        
        #if form.is_valid():
        predictions = gradcam.returnPredictions(imageFile, request.POST['weights'], request.POST['cnn'])
        pdb.set_trace()
        request.session['predictions'] = json.dumps(list(predictions))
        request.session['imageName'] = imageFile

        return HttpResponseRedirect(reverse("models:classify"))
    else:
         form = UploadFileForm()   
    return render(request, 'models/models.html', {'form':form})

def classify(request):
    predictions=request.session['predictions']
    imageName = request.session['imageName']
    
    for index in range(len(predictions)):
        result = Result(output=predictions[0], result=predicitons[1], probability=predictions[2], image=imageName)
    image = get_object_or_404(Image, name=imageName)
    return render(request, 'models/classify.html', {'image':image})

def train(request):
    return HttpResponse('This Page will be used to update existing models');
